{"ast":null,"code":"import React,{useState}from'react';import io from'socket.io-client';import ShipPlacement from'./ShipPlacement';import Board from'./Board';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const socket=io('https://battleship-wqaj.onrender.com');function App(){// Add initial state values\nconst initialGameId='';const initialRole='player';const initialStatus='';const initialGame=null;const initialBoardSize=10;const[gameId,setGameId]=useState(initialGameId);const[role,setRole]=useState(initialRole);const[status,setStatus]=useState(initialStatus);const[game,setGame]=useState(initialGame);const[boardSize,setBoardSize]=useState(initialBoardSize);// Reset function\nconst resetGame=()=>{setGameId(initialGameId);setRole(initialRole);setStatus(initialStatus);setGame(initialGame);setBoardSize(initialBoardSize);};// (Removed duplicate state declarations; see above for correct ones)\nconst joinGame=()=>{// Only send boardSize if first player (game not yet created)\nsocket.emit('joinGame',{gameId,role,boardSize:role==='player'&&(!game||game.players&&game.players.length===0)?boardSize:undefined});};React.useEffect(()=>{socket.on('joined',data=>{setStatus(`Joined as ${data.role}`);});socket.on('full',data=>{setStatus(`Cannot join: ${data.reason}`);});socket.on('update',gameData=>{setGame(gameData);});return()=>{socket.off('joined');socket.off('full');socket.off('update');};},[]);const handlePlaceShips=ships=>{socket.emit('placeShips',{gameId,ships});};const myId=socket.id;const isPlayer=role==='player'&&game&&game.players.includes(socket.id);const isPlacing=isPlayer&&game&&game.state==='placing';const isInProgress=game&&game.state==='in-progress';const isFinished=game&&game.state==='finished';const isObserver=role==='observer';// Find out which player you are\nconst myIdx=game&&game.players?game.players.indexOf(socket.id):-1;const opponentId=game&&game.players&&game.players.length===2?game.players.find(id=>id!==socket.id):null;// Board data\nconst myBoard=game&&game.boards&&socket.id in game.boards?game.boards[socket.id]:{ships:[],hits:[],misses:[]};const oppBoard=game&&game.boards&&opponentId&&opponentId in game.boards?game.boards[opponentId]:{ships:[],hits:[],misses:[]};// For observers, show both boards (always use a default board if missing)\nconst EMPTY_BOARD={ships:[],hits:[],misses:[]};const playerBoards=game&&game.players?game.players.map(pid=>({id:pid,board:game.boards&&game.boards[pid]?game.boards[pid]:EMPTY_BOARD,you:pid===socket.id})):[];// Firing\nconst canFire=isPlayer&&isInProgress&&game.turn===socket.id&&opponentId;const firedCells=oppBoard?[...oppBoard.hits,...oppBoard.misses]:[];const handleFire=(x,y)=>{if(!canFire)return;// Don't allow firing at the same cell twice\nif(firedCells.some(pos=>pos.x===x&&pos.y===y))return;socket.emit('fire',{gameId,x,y});};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:32,fontFamily:'sans-serif'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Battleships Online\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Game ID\",value:gameId,onChange:e=>setGameId(e.target.value)}),/*#__PURE__*/_jsxs(\"select\",{value:role,onChange:e=>setRole(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"player\",children:\"Player\"}),/*#__PURE__*/_jsx(\"option\",{value:\"observer\",children:\"Observer\"})]}),role==='player'&&(!game||game.players&&game.players.length===0)&&/*#__PURE__*/_jsxs(\"select\",{value:boardSize,onChange:e=>setBoardSize(Number(e.target.value)),style:{marginLeft:8},children:[/*#__PURE__*/_jsx(\"option\",{value:8,children:\"8x8\"}),/*#__PURE__*/_jsx(\"option\",{value:10,children:\"10x10\"}),/*#__PURE__*/_jsx(\"option\",{value:15,children:\"15x15\"})]}),game&&/*#__PURE__*/_jsxs(\"span\",{style:{marginLeft:8},children:[/*#__PURE__*/_jsx(\"b\",{children:\"Board Size:\"}),\" \",game.boardSize,\"x\",game.boardSize]}),/*#__PURE__*/_jsx(\"button\",{onClick:joinGame,style:{marginLeft:8},children:\"Join Game\"}),/*#__PURE__*/_jsx(\"button\",{onClick:resetGame,style:{marginLeft:8},children:\"Restart Game\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:16},children:[/*#__PURE__*/_jsx(\"b\",{children:\"Status:\"}),\" \",status]}),game&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:16},children:[/*#__PURE__*/_jsx(\"b\",{children:\"Players:\"}),\" \",game.players.length,\" / 2\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"b\",{children:\"Observers:\"}),\" \",game.observers.length,\" / 10\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"b\",{children:\"Game State:\"}),\" \",game.state]}),isPlacing&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:24},children:/*#__PURE__*/_jsx(ShipPlacement,{boardSize:game.boardSize,onPlaceShips:handlePlaceShips})}),isInProgress&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:32,display:'flex',gap:32},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your Board\"}),/*#__PURE__*/_jsx(Board,{boardSize:game.boardSize,ships:myBoard.ships,hits:myBoard.hits,misses:myBoard.misses,showShips:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Opponent's Board\"}),/*#__PURE__*/_jsx(Board,{boardSize:game.boardSize,ships:[],hits:oppBoard.hits,misses:oppBoard.misses,showShips:false,onCellClick:handleFire,clickable:canFire,firedCells:firedCells}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:12},children:canFire?/*#__PURE__*/_jsx(\"b\",{children:\"Your turn! Click a cell to fire.\"}):game.turn===socket.id?'Waiting...':\"Opponent's turn\"})]})]}),isObserver&&isInProgress&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:32,display:'flex',gap:32},children:playerBoards.map((pb,idx)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Player \",idx+1,\" \",pb.you&&'(You)']}),/*#__PURE__*/_jsx(Board,{boardSize:game.boardSize,ships:pb.board.ships,hits:pb.board.hits,misses:pb.board.misses,showShips:true})]},pb.id))}),isFinished&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:32},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Game Over!\"}),game.winner===socket.id?/*#__PURE__*/_jsx(\"div\",{style:{color:'green',fontWeight:'bold'},children:\"You win!\"}):game.players.includes(socket.id)?/*#__PURE__*/_jsx(\"div\",{style:{color:'red',fontWeight:'bold'},children:\"You lose!\"}):/*#__PURE__*/_jsxs(\"div\",{style:{color:'blue'},children:[\"Winner: Player \",game.players.indexOf(game.winner)+1]})]})]});}export default App;","map":{"version":3,"names":["React","useState","io","ShipPlacement","Board","jsx","_jsx","jsxs","_jsxs","socket","App","initialGameId","initialRole","initialStatus","initialGame","initialBoardSize","gameId","setGameId","role","setRole","status","setStatus","game","setGame","boardSize","setBoardSize","resetGame","joinGame","emit","players","length","undefined","useEffect","on","data","reason","gameData","off","handlePlaceShips","ships","myId","id","isPlayer","includes","isPlacing","state","isInProgress","isFinished","isObserver","myIdx","indexOf","opponentId","find","myBoard","boards","hits","misses","oppBoard","EMPTY_BOARD","playerBoards","map","pid","board","you","canFire","turn","firedCells","handleFire","x","y","some","pos","style","padding","fontFamily","children","placeholder","value","onChange","e","target","Number","marginLeft","onClick","marginTop","observers","onPlaceShips","display","gap","showShips","onCellClick","clickable","pb","idx","winner","color","fontWeight"],"sources":["C:/Users/arast/OneDrive/Desktop/codingAI/battleship/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport io from 'socket.io-client';\nimport ShipPlacement from './ShipPlacement';\nimport Board from './Board';\n\nconst socket = io('https://battleship-wqaj.onrender.com');\n\nfunction App() {\n  // Add initial state values\n  const initialGameId = '';\n  const initialRole = 'player';\n  const initialStatus = '';\n  const initialGame = null;\n  const initialBoardSize = 10;\n\n  const [gameId, setGameId] = useState(initialGameId);\n  const [role, setRole] = useState(initialRole);\n  const [status, setStatus] = useState(initialStatus);\n  const [game, setGame] = useState(initialGame);\n  const [boardSize, setBoardSize] = useState(initialBoardSize);\n\n  // Reset function\n  const resetGame = () => {\n    setGameId(initialGameId);\n    setRole(initialRole);\n    setStatus(initialStatus);\n    setGame(initialGame);\n    setBoardSize(initialBoardSize);\n  };\n\n  // (Removed duplicate state declarations; see above for correct ones)\n\n\n  const joinGame = () => {\n    // Only send boardSize if first player (game not yet created)\n    socket.emit('joinGame', { gameId, role, boardSize: role === 'player' && (!game || (game.players && game.players.length === 0)) ? boardSize : undefined });\n  };\n\n  React.useEffect(() => {\n    socket.on('joined', (data) => {\n      setStatus(`Joined as ${data.role}`);\n    });\n    socket.on('full', (data) => {\n      setStatus(`Cannot join: ${data.reason}`);\n    });\n    socket.on('update', (gameData) => {\n      setGame(gameData);\n    });\n    return () => {\n      socket.off('joined');\n      socket.off('full');\n      socket.off('update');\n    };\n  }, []);\n\n  const handlePlaceShips = (ships) => {\n    socket.emit('placeShips', { gameId, ships });\n  };\n\n  const myId = socket.id;\n  const isPlayer = role === 'player' && game && game.players.includes(socket.id);\n  const isPlacing = isPlayer && game && game.state === 'placing';\n  const isInProgress = game && game.state === 'in-progress';\n  const isFinished = game && game.state === 'finished';\n  const isObserver = role === 'observer';\n\n  // Find out which player you are\n  const myIdx = game && game.players ? game.players.indexOf(socket.id) : -1;\n  const opponentId = game && game.players && game.players.length === 2 ? game.players.find(id => id !== socket.id) : null;\n\n  // Board data\n  const myBoard = game && game.boards && socket.id in game.boards ? game.boards[socket.id] : { ships: [], hits: [], misses: [] };\n  const oppBoard = game && game.boards && opponentId && opponentId in game.boards ? game.boards[opponentId] : { ships: [], hits: [], misses: [] };\n\n  // For observers, show both boards (always use a default board if missing)\n  const EMPTY_BOARD = { ships: [], hits: [], misses: [] };\n  const playerBoards = game && game.players ? game.players.map(pid => ({\n    id: pid,\n    board: (game.boards && game.boards[pid]) ? game.boards[pid] : EMPTY_BOARD,\n    you: pid === socket.id\n  })) : [];\n\n  // Firing\n  const canFire = isPlayer && isInProgress && game.turn === socket.id && opponentId;\n  const firedCells = oppBoard ? [...oppBoard.hits, ...oppBoard.misses] : [];\n  const handleFire = (x, y) => {\n    if (!canFire) return;\n    // Don't allow firing at the same cell twice\n    if (firedCells.some(pos => pos.x === x && pos.y === y)) return;\n    socket.emit('fire', { gameId, x, y });\n  };\n\n  return (\n    <div style={{ padding: 32, fontFamily: 'sans-serif' }}>\n      <h1>Battleships Online</h1>\n      <div>\n        <input\n          placeholder=\"Game ID\"\n          value={gameId}\n          onChange={e => setGameId(e.target.value)}\n        />\n        <select value={role} onChange={e => setRole(e.target.value)}>\n          <option value=\"player\">Player</option>\n          <option value=\"observer\">Observer</option>\n        </select>\n        {/* Only allow board size selection if player and not joined yet */}\n        {role === 'player' && (!game || (game.players && game.players.length === 0)) && (\n          <select value={boardSize} onChange={e => setBoardSize(Number(e.target.value))} style={{ marginLeft: 8 }}>\n            <option value={8}>8x8</option>\n            <option value={10}>10x10</option>\n            <option value={15}>15x15</option>\n          </select>\n        )}\n        {game && (\n          <span style={{ marginLeft: 8 }}>\n            <b>Board Size:</b> {game.boardSize}x{game.boardSize}\n          </span>\n        )}\n        <button onClick={joinGame} style={{ marginLeft: 8 }}>Join Game</button>\n        <button onClick={resetGame} style={{ marginLeft: 8 }}>Restart Game</button>\n      </div>\n      <div style={{ marginTop: 16 }}>\n        <b>Status:</b> {status}\n      </div>\n      {game && (\n        <div style={{ marginTop: 16 }}>\n          <b>Players:</b> {game.players.length} / 2<br />\n          <b>Observers:</b> {game.observers.length} / 10<br />\n          <b>Game State:</b> {game.state}\n        </div>\n      )}\n      {/* Ship placement phase for player */}\n      {isPlacing && (\n        <div style={{ marginTop: 24 }}>\n          <ShipPlacement boardSize={game.boardSize} onPlaceShips={handlePlaceShips} />\n        </div>\n      )}\n\n      {/* Gameplay phase */}\n      {isInProgress && (\n        <div style={{ marginTop: 32, display: 'flex', gap: 32 }}>\n          <div>\n            <h3>Your Board</h3>\n            <Board\n              boardSize={game.boardSize}\n              ships={myBoard.ships}\n              hits={myBoard.hits}\n              misses={myBoard.misses}\n              showShips={true}\n            />\n          </div>\n          <div>\n            <h3>Opponent's Board</h3>\n            <Board\n              boardSize={game.boardSize}\n              ships={[]}\n              hits={oppBoard.hits}\n              misses={oppBoard.misses}\n              showShips={false}\n              onCellClick={handleFire}\n              clickable={canFire}\n              firedCells={firedCells}\n            />\n            <div style={{ marginTop: 12 }}>\n              {canFire ? <b>Your turn! Click a cell to fire.</b> : game.turn === socket.id ? 'Waiting...' : \"Opponent's turn\"}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Observer view */}\n      {isObserver && isInProgress && (\n        <div style={{ marginTop: 32, display: 'flex', gap: 32 }}>\n          {playerBoards.map((pb, idx) => (\n            <div key={pb.id}>\n              <h3>Player {idx + 1} {pb.you && '(You)'}</h3>\n              <Board\n                boardSize={game.boardSize}\n                ships={pb.board.ships}\n                hits={pb.board.hits}\n                misses={pb.board.misses}\n                showShips={true}\n              />\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Game over */}\n      {isFinished && (\n        <div style={{ marginTop: 32 }}>\n          <h2>Game Over!</h2>\n          {game.winner === socket.id ? (\n            <div style={{ color: 'green', fontWeight: 'bold' }}>You win!</div>\n          ) : game.players.includes(socket.id) ? (\n            <div style={{ color: 'red', fontWeight: 'bold' }}>You lose!</div>\n          ) : (\n            <div style={{ color: 'blue' }}>Winner: Player {game.players.indexOf(game.winner) + 1}</div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}