{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arast\\\\OneDrive\\\\Desktop\\\\codingAI\\\\client\\\\src\\\\ShipPlacement.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLASSIC_SHIPS = [{\n  name: 'Carrier',\n  size: 5\n}, {\n  name: 'Battleship',\n  size: 4\n}, {\n  name: 'Cruiser',\n  size: 3\n}, {\n  name: 'Submarine',\n  size: 3\n}, {\n  name: 'Destroyer',\n  size: 2\n}];\nfunction ShipPlacement({\n  boardSize,\n  onPlaceShips\n}) {\n  _s();\n  var _CLASSIC_SHIPS$curren;\n  const [ships, setShips] = useState([]); // {name, positions: [{x, y}]}\n  const [currentShipIdx, setCurrentShipIdx] = useState(0);\n  const [orientation, setOrientation] = useState('horizontal');\n  const [tempPositions, setTempPositions] = useState([]);\n  const grid = Array(boardSize).fill(0).map(() => Array(boardSize).fill(null));\n  ships.forEach(ship => {\n    ship.positions.forEach(pos => {\n      grid[pos.y][pos.x] = ship.name;\n    });\n  });\n  tempPositions.forEach(pos => {\n    grid[pos.y][pos.x] = 'preview';\n  });\n  const placeShip = (x, y) => {\n    const ship = CLASSIC_SHIPS[currentShipIdx];\n    let positions = [];\n    for (let i = 0; i < ship.size; i++) {\n      let px = orientation === 'horizontal' ? x + i : x;\n      let py = orientation === 'vertical' ? y + i : y;\n      if (px >= boardSize || py >= boardSize) return;\n      positions.push({\n        x: px,\n        y: py\n      });\n    }\n    // Check overlap\n    for (const s of ships) {\n      for (const pos of s.positions) {\n        if (positions.some(p => p.x === pos.x && p.y === pos.y)) return;\n      }\n    }\n    setShips([...ships, {\n      name: ship.name,\n      positions\n    }]);\n    setCurrentShipIdx(currentShipIdx + 1);\n    setTempPositions([]);\n  };\n  const previewShip = (x, y) => {\n    const ship = CLASSIC_SHIPS[currentShipIdx];\n    let positions = [];\n    for (let i = 0; i < ship.size; i++) {\n      let px = orientation === 'horizontal' ? x + i : x;\n      let py = orientation === 'vertical' ? y + i : y;\n      if (px >= boardSize || py >= boardSize) return setTempPositions([]);\n      positions.push({\n        x: px,\n        y: py\n      });\n    }\n    // Check overlap\n    for (const s of ships) {\n      for (const pos of s.positions) {\n        if (positions.some(p => p.x === pos.x && p.y === pos.y)) return setTempPositions([]);\n      }\n    }\n    setTempPositions(positions);\n  };\n  const clearPreview = () => setTempPositions([]);\n  const handleCellClick = (x, y) => {\n    if (currentShipIdx < CLASSIC_SHIPS.length) placeShip(x, y);\n  };\n  const handleOrientationToggle = () => {\n    setOrientation(orientation === 'horizontal' ? 'vertical' : 'horizontal');\n  };\n  const handleSubmit = () => {\n    if (ships.length === CLASSIC_SHIPS.length) {\n      onPlaceShips(ships);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Place your ships\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Placing: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: ((_CLASSIC_SHIPS$curren = CLASSIC_SHIPS[currentShipIdx]) === null || _CLASSIC_SHIPS$curren === void 0 ? void 0 : _CLASSIC_SHIPS$curren.name) || 'All placed!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), \" (\", orientation, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOrientationToggle,\n      style: {\n        marginBottom: 8\n      },\n      children: \"Toggle Orientation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: `repeat(${boardSize}, 32px)`,\n        gap: 2\n      },\n      children: Array(boardSize).fill(0).map((_, y) => Array(boardSize).fill(0).map((_, x) => {\n        let cell = grid[y][x];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleCellClick(x, y),\n          onMouseEnter: () => previewShip(x, y),\n          onMouseLeave: clearPreview,\n          style: {\n            width: 32,\n            height: 32,\n            border: '1px solid #999',\n            background: cell === 'preview' ? '#aaf' : cell ? '#555' : '#fff',\n            cursor: currentShipIdx < CLASSIC_SHIPS.length ? 'pointer' : 'default',\n            boxSizing: 'border-box',\n            transition: 'background 0.1s'\n          }\n        }, x + '-' + y, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this);\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: ships.length !== CLASSIC_SHIPS.length,\n      style: {\n        marginTop: 12\n      },\n      children: \"Confirm Placement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(ShipPlacement, \"JHLnUCgShlp7g2b4LoRZJKWQvQE=\");\n_c = ShipPlacement;\nexport default ShipPlacement;\nvar _c;\n$RefreshReg$(_c, \"ShipPlacement\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CLASSIC_SHIPS","name","size","ShipPlacement","boardSize","onPlaceShips","_s","_CLASSIC_SHIPS$curren","ships","setShips","currentShipIdx","setCurrentShipIdx","orientation","setOrientation","tempPositions","setTempPositions","grid","Array","fill","map","forEach","ship","positions","pos","y","x","placeShip","i","px","py","push","s","some","p","previewShip","clearPreview","handleCellClick","length","handleOrientationToggle","handleSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginBottom","display","gridTemplateColumns","gap","_","cell","onMouseEnter","onMouseLeave","width","height","border","background","cursor","boxSizing","transition","disabled","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/arast/OneDrive/Desktop/codingAI/client/src/ShipPlacement.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst CLASSIC_SHIPS = [\n  { name: 'Carrier', size: 5 },\n  { name: 'Battleship', size: 4 },\n  { name: 'Cruiser', size: 3 },\n  { name: 'Submarine', size: 3 },\n  { name: 'Destroyer', size: 2 },\n];\n\nfunction ShipPlacement({ boardSize, onPlaceShips }) {\n  const [ships, setShips] = useState([]); // {name, positions: [{x, y}]}\n  const [currentShipIdx, setCurrentShipIdx] = useState(0);\n  const [orientation, setOrientation] = useState('horizontal');\n  const [tempPositions, setTempPositions] = useState([]);\n\n  const grid = Array(boardSize).fill(0).map(() => Array(boardSize).fill(null));\n  ships.forEach(ship => {\n    ship.positions.forEach(pos => {\n      grid[pos.y][pos.x] = ship.name;\n    });\n  });\n  tempPositions.forEach(pos => {\n    grid[pos.y][pos.x] = 'preview';\n  });\n\n  const placeShip = (x, y) => {\n    const ship = CLASSIC_SHIPS[currentShipIdx];\n    let positions = [];\n    for (let i = 0; i < ship.size; i++) {\n      let px = orientation === 'horizontal' ? x + i : x;\n      let py = orientation === 'vertical' ? y + i : y;\n      if (px >= boardSize || py >= boardSize) return;\n      positions.push({ x: px, y: py });\n    }\n    // Check overlap\n    for (const s of ships) {\n      for (const pos of s.positions) {\n        if (positions.some(p => p.x === pos.x && p.y === pos.y)) return;\n      }\n    }\n    setShips([...ships, { name: ship.name, positions }]);\n    setCurrentShipIdx(currentShipIdx + 1);\n    setTempPositions([]);\n  };\n\n  const previewShip = (x, y) => {\n    const ship = CLASSIC_SHIPS[currentShipIdx];\n    let positions = [];\n    for (let i = 0; i < ship.size; i++) {\n      let px = orientation === 'horizontal' ? x + i : x;\n      let py = orientation === 'vertical' ? y + i : y;\n      if (px >= boardSize || py >= boardSize) return setTempPositions([]);\n      positions.push({ x: px, y: py });\n    }\n    // Check overlap\n    for (const s of ships) {\n      for (const pos of s.positions) {\n        if (positions.some(p => p.x === pos.x && p.y === pos.y)) return setTempPositions([]);\n      }\n    }\n    setTempPositions(positions);\n  };\n\n  const clearPreview = () => setTempPositions([]);\n\n  const handleCellClick = (x, y) => {\n    if (currentShipIdx < CLASSIC_SHIPS.length) placeShip(x, y);\n  };\n\n  const handleOrientationToggle = () => {\n    setOrientation(orientation === 'horizontal' ? 'vertical' : 'horizontal');\n  };\n\n  const handleSubmit = () => {\n    if (ships.length === CLASSIC_SHIPS.length) {\n      onPlaceShips(ships);\n    }\n  };\n\n  return (\n    <div>\n      <h3>Place your ships</h3>\n      <div>Placing: <b>{CLASSIC_SHIPS[currentShipIdx]?.name || 'All placed!'}</b> ({orientation})</div>\n      <button onClick={handleOrientationToggle} style={{marginBottom: 8}}>Toggle Orientation</button>\n      <div style={{ display: 'grid', gridTemplateColumns: `repeat(${boardSize}, 32px)`, gap: 2 }}>\n        {Array(boardSize).fill(0).map((_, y) =>\n          Array(boardSize).fill(0).map((_, x) => {\n            let cell = grid[y][x];\n            return (\n              <div\n                key={x + '-' + y}\n                onClick={() => handleCellClick(x, y)}\n                onMouseEnter={() => previewShip(x, y)}\n                onMouseLeave={clearPreview}\n                style={{\n                  width: 32, height: 32, border: '1px solid #999', background:\n                    cell === 'preview' ? '#aaf' : cell ? '#555' : '#fff',\n                  cursor: currentShipIdx < CLASSIC_SHIPS.length ? 'pointer' : 'default',\n                  boxSizing: 'border-box',\n                  transition: 'background 0.1s',\n                }}\n              />\n            );\n          })\n        )}\n      </div>\n      <button\n        onClick={handleSubmit}\n        disabled={ships.length !== CLASSIC_SHIPS.length}\n        style={{marginTop: 12}}\n      >\n        Confirm Placement\n      </button>\n    </div>\n  );\n}\n\nexport default ShipPlacement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}